(()=>{"use strict";(new class extends class{constructor(){this.board=[],this.board.length||this.init()}init(){for(let t=0;t<10;t++){this.board.push([]);for(let r=0;r<10;r++)this.board[t].push({hasShip:!1,isShot:!1})}}placeShip(t,r,i,e){if(this.board[t][r].hasShip)return"Error, place already taken";if(t<this.board.length-(i-1)||r<this.board[0].length-(i-1)){if(!e)for(let e=0;e<i;e++)this.board[t][r].hasShip=!0,r++;if(e)for(let e=0;e<i;e++)this.board[t][r].hasShip=!0,t++;const o=[];for(let t=0;t<this.board.length;t++)for(let r=0;r<this.board[t].length;r++)this.board[t][r].hasShip&&o.push([t,r]);return o}return"Error, game board border collision"}receiveAttack(t,r){return this.board[t][r].isShot?"Error, position already shot":(this.board[t][r].isShot=!0,[t,r])}}{constructor(){super()}displayGrid(){const t=document.querySelector(".content");for(let r=0;r<this.board.length;r++)for(let i=0;i<this.board[r].length;i++){let e=document.createElement("div");e.className="grid",e.id=`${r},${i}`,t.appendChild(e),e.textContent=e.id}}_displayShip(){for(let t=0;t<this.board.length;t++)for(let r=0;r<this.board[t].length;r++)if(!0===this.board[t][r].hasShip)return"S"}}).displayGrid()})();